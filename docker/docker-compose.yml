version: "3.8"

services:
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - ./../:/var/www/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php81-service
    networks:
      - nginx-php81

  php81-service:
    container_name: php81-container
    build:
      context: .
      dockerfile: ./php-fpm/Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./../:/var/www/
    user: "1001"
    networks:
      - nginx-php81

  zookeeper:
    container_name: zookeeper-container
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - nginx-php81

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - nginx-php81

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - nginx-php81

networks:
  nginx-php81:


